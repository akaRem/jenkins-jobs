- job-template:
    name: '{project-version}-{name}-repotest-{distro}'
    project-type: freestyle
    concurrent: true

    node: '{install-node}'

    triggers:
      - zuul

    scm:
      - fuel-infra:
          scm-repo: '{install-scm-repo}'
          scm-branch: '{install-scm-branch}'
          scm-basedir: ''

    wrappers:
      - timestamps
      - ansicolor

    builders:

      - inject-from-job(same-change):
          job-name: '{project-version}-{name}-build-{distro}'
          artifact-name: 'buildresult.params'

      - inject-from-job(same-change):
          job-name: '{project-version}-{name}-publish-{distro}'
          artifact-name: '{pkg_type}.publish.setenvfile'

      - shell: |
          #!/bin/bash
          set -ex
          export REPO_URL=${{DEB_REPO_URL:-${{RPM_REPO_URL}}}}

          # Remove quotes, double and trailing slashes
          REPO_URL=$(echo "${{REPO_URL}}"   | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')
          EXTRAREPO=$(echo "${{EXTRAREPO}}" | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')

          # Remove duplicates
          OLDIFS=${{IFS}}
          IFS='|'
          EXTRAREPOS=( ${{EXTRAREPO}} )
          IFS=${{OLDIFS}}

          for repo_num in ${{!EXTRAREPOS[@]}}; do
              grep -F "${{REPO_URL}}" <<< "${{EXTRAREPOS[${{repo_num}}]}}" && unset EXTRAREPOS[${{repo_num}}]
          done

          EXTRAREPO=$(printf "%s\n" "${{EXTRAREPOS[@]}}" | sort -u | tr '\n' '|' | sed -r 's/\|$//')

          bash -x repo-test-{pkg_type}-docker

