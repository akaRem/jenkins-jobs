- job-template:
    name: '{project-version}-{name}-systest-{distro}'
    concurrent: true
    logrotate:
      artifactDaysToKeep: 90
      daysToKeep: 90
    properties:
      - heavy-job:
          weight: 8
      - inject:
          properties-content: |
            OPENSTACK_RELEASE={openstack_release}
            OS_TYPE={os}
            ENV_PREFIX={project-version}-{name}-systest-{os}-{distro}
            MASTER_NODE_EXTRA_PACKAGES=e1000-kmod
            # Required if REBUILD_ISO is true
            MIRROR_MOS_UBUNTU_ROOT={mos-deb-repo-path}
            MIRROR_MOS_UBUNTU_SUITE={mos-deb-dist-name}
    parameters:
      - string:
          name: EXTRA_DEB_REPOS
          # New lines will become spaces. So don't add newline near "|" because it possibly will break parsing inside scripts
          default: >-
            deb
            http://mirror.fuel-infra.org/{mos-deb-repo-path} {mos-deb-dist-name} main restricted,1200|deb
            http://mirror.fuel-infra.org/{mos-deb-repo-path} {mos-deb-dist-name}-security main restricted,1201|deb
            http://mirror.fuel-infra.org/{mos-deb-repo-path} {mos-deb-dist-name}-proposed main restricted,1202|deb
            http://mirror.fuel-infra.org/{mos-deb-repo-path} {mos-deb-dist-name}-updates  main restricted,1201|deb
            http://{repo-host}/{deb-repo-path} {deb-dist-name} main,1220
          description: >-
            <p>
            Additional deb repos. Note, that empty repos will bring some errors into console output.
            But this errors will not break the build.
            <p>
            deb http://... trusty main(,prio1)|deb http://... trusty main(,prio2)
      - string:
          name: EXTRA_DEB_REPOS_PRIORITY
          default: '1052'
      - string:
          name: EXTRA_RPM_REPOS
          default: 'mos,http://mirror.fuel-infra.org/{mos-rpm-repo-path}/os/x86_64/,98|{name},http://{repo-host}/{rpm-repo-path}/os/x86_64/,90'
          description: 'reponame1,http://...(,prio1)|reponame2,http://...(,prio2)'
      - string:
          name: EXTRA_RPM_REPOS_PRIORITY
          default: '1'
      - bool:
          name: DEFAULT_REBUILD_ISO
          default: false
      - bool:
          name: DEFAULT_UPDATE_MASTER
          default: true
    scm:
      - git:
          url: 'https://git.openstack.org/openstack/fuel-main.git'
          basedir: 'fuel-main'
          branches:
            - 'master'
          skip-tag: true
          browser: gitweb
          browser-url: 'https://review.openstack.org/gitweb?p=openstack/fuel-main.git'
      - git:
          url: 'https://git.openstack.org/openstack/fuel-qa.git'
          basedir: 'fuel-qa'
          branches:
            - 'master'
          skip-tag: true
          browser: gitweb
          browser-url: 'https://review.openstack.org/gitweb?p=openstack/fuel-qa.git'
    triggers:
      - zuul
    builders:
      - inject:
          # Set defaults which could be reinjected
          properties-content: |
            REBUILD_ISO=$DEFAULT_REBUILD_ISO
            UPDATE_MASTER=$DEFAULT_UPDATE_MASTER

      - shell: |
          #!/bin/bash
          set -ex
          # Clean logs from previous runs
          rm -vf fuel-qa/logs/* fuel-qa/nosetests.xml
          # Pre-create JUnit results file to not fail because of JUnit publisher
          touch fuel-qa/nosetests.xml
          # Remove parameter files from previous runs
          rm -vf 'buildresult.params' '{pkg_type}.publish.setenvfile' 'magnet_link.txt'

      # This is done for flexibility.
      # We could trigger this job with gerrit parameters and get corresponding artifact.
      # Or we could trigger this job and pass required fields as parameters, so artifact won't be needed
      # 1. try to copy artifact
      - copyartifact:
          project: '{project-version}-{name}-build-{distro}'
          filter: 'buildresult.params'
          which-build: last-successful
          parameter-filters: ZUUL_CHANGE=${{ZUUL_CHANGE}},ZUUL_PATCHSET=${{ZUUL_PATCHSET}}
          optional: true
      # 2. touch it, so the file will exist in all cases
      - shell: touch 'buildresult.params'
      # 3. inject file's content: artifact data or nothing
      - inject-properties-file:
          # Inject
          # - useful:
          #     BUILD_HOST
          #     PKG_PATH
          # - unuseful:
          #     DIST
          #     REPO_TYPE
          #     GERRIT_CHANGE_STATUS
          # - maybe useful:
          #     EXTRAREPO
          #     REQUEST_NUM
          #     LP_BUG
          #     IS_SECURITY
          properties-file: 'buildresult.params'

      - copyartifact:
          project: '{project-version}-{name}-publish-{distro}'
          filter: '{pkg_type}.publish.setenvfile'
          which-build: last-successful
          parameter-filters: ZUUL_CHANGE=${{ZUUL_CHANGE}},ZUUL_PATCHSET=${{ZUUL_PATCHSET}}
          optional: true
      - shell: touch '{pkg_type}.publish.setenvfile'
      - inject-properties-file:
          # Injects package lists with version and repository URL
          # depending on pkg type it will be:
          # rpm
          # - useful:
          #     RPM_VERSION
          #     RPM_BINARIES
          #     RPM_REPO_URL
          #     RPM_VERSION
          # - unuseful:
          #     RPM_PUBLISH_SUCCEEDED
          #     RPM_DISTRO
          #     RPM_CHANGE_REVISION
          #     LP_BUG
          # deb
          # - useful:
          #     DEB_VERSION
          #     DEB_BINARIES
          #     DEB_REPO_URL
          #     RPM_VERSION
          # - unuseful:
          #     DEB_PUBLISH_SUCCEEDED
          #     DEB_DISTRO
          #     DEB_PACKAGENAME
          #     DEB_CHANGE_REVISION
          #     LP_BUG
          properties-file: '{pkg_type}.publish.setenvfile'

      - copyartifact:
          project: 'devops.{project-version}.env'
          filter: 'fuel_qa_commit.txt,magnet_link.txt,ubuntu_mirror_id.txt'
          which-build: last-successful
      - inject:
          # injects variable FUEL_QA_COMMIT
          properties-file: 'fuel_qa_commit.txt'
      - inject:
          # injects variable MAGNET_LINK
          properties-file: 'magnet_link.txt'
      - inject:
          # injects variable UBUNTU_MIRROR_ID
          properties-file: 'ubuntu_mirror_id.txt'

      - guess-mirror

      # For builds triggered by timer TEST_GROUP will be set from job parameters (bvt_2 by default).
      # For zuul-triggered jobs TEST_GROUP will be set by the next macros.
      - guess-testgroup

      - inject:
          # when started by zuul, then parameters defaults are not applied
          # when started by jenkins inject will not override parameters
          properties-content: |
            EXTRA_RPM_REPOS_PRIORITY=1
            EXTRA_DEB_REPOS_PRIORITY=1052
      - shell:
          !include-raw-escape:
            'builders/system_test.sh'

    wrappers:
      - timeout:
          fail: true
          timeout: 210
      - timestamps
      - ansicolor

    publishers:
      - archive:
          allow-empty: true
          artifacts: '**/nosetests.xml, logs/*, fuel-qa/logs/*'
          latest-only: false
      - logparser:
          parse-rules: '/var/lib/jenkins/fuellib.parser'
          unstable-on-warning: false
          fail-on-error: false
      - junit:
          keep-long-stdio: false
          results: '**/nosetests.xml'

    node: '{systest-node}'
