- job-template:
    name: '{project-version}-fuel-pkg-install-{distro}'
    project-type: freestyle
    concurrent: true
    wrappers:
      - install-vm-creds
      - pre-scm-buildstep:
        - shell: 'rm -rf *'
      - timestamps
      - ansicolor
    triggers:
      - zuul
    scm:
      - fuel-infra:
          scm-repo: '{install-scm-repo}'
          scm-branch: '{install-scm-branch}'
          scm-basedir: ''
    builders:
      - shell:
          !include-raw-escape builders/install.cleanup.sh
      - copyartifact:
          project: '{project-version}-fuel-pkg-build-{distro}'
          filter: 'buildresult.params'
          which-build: last-successful
          parameter-filters: ZUUL_CHANGE=${{ZUUL_CHANGE}},ZUUL_PATCHSET=${{ZUUL_PATCHSET}}
          optional: true
      - copyartifact:
          project: '{project-version}-fuel-pkg-publish-{distro}'
          filter: '{pkg_type}.publish.setenvfile'
          which-build: last-successful
          parameter-filters: ZUUL_CHANGE=${{ZUUL_CHANGE}},ZUUL_PATCHSET=${{ZUUL_PATCHSET}}
          optional: true
      - shell: touch 'buildresult.params' '{pkg_type}.publish.setenvfile'
      - inject:
          properties-file: 'buildresult.params'
      - inject:
          properties-file: '{pkg_type}.publish.setenvfile'
      - shell: |
          #!/bin/bash -xe
          export DIST=${{DIST:-{distro}}}
          export PACKAGEVERSION=${{DEB_VERSION:-${{RPM_VERSION}}}}
          export PACKAGELIST=${{DEB_BINARIES:-${{RPM_BINARIES}}}}
          export REPO_URL=${{DEB_REPO_URL:-${{RPM_REPO_URL}}}}
          export REPO_TYPE={pkg_type}
          export GERRIT_PROJECT=${{ZUUL_PROJECT}}

          # Remove quotes, double and trailing slashes
          REPO_URL=$(echo "${{REPO_URL}}"   | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')
          EXTRAREPO=$(echo "${{EXTRAREPO}}" | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')
          PACKAGELIST=$(echo "${{PACKAGELIST}}" | sed 's|,| |g')

          for script in version-test-{pkg_type} vm-test
          do
            bash -x "${{WORKSPACE}}/${{script}}"
          done

    publishers:
      - post-tasks:
        - matches:
            - log-text: '/run/shm/'
              operator: AND
          script:
            !include-raw-escape builders/install.destroy.vm.sh
      - junit:
          results: 'report.xml'
      - archive:
          artifacts: '**/*.xml, {pkg_type}.install.setenvfile'
          allow-empty: true

    node: '{install-node}'
