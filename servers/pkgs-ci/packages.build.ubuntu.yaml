- job-template:
    name: 'packages.build.ubuntu'
    description: 'Unified job for building any package(s) from provided project repo'
    concurrent: true
    node: '{build-node}'

    parameters:

      # Gerrit-related vars for perestroika
      # -----------------------------------

      # todo: move these variables to global defaults
      - string:
          name: GERRIT_HOST
          default: review.fuel-infra.org
      - string:
          name: GERRIT_PORT
          default: '29418'
      - string:
          name: GERRIT_USER
          default: openstack-ci-jenkins

      # Project definition
      # -----------------------------------

      - string:
          name: PACKAGENAME
          description: "Name of project to build"
      - string:
          name: IS_OPENSTACK
          description: "If code and specs are in separate repos then set true, set false otherwise"
      - string:
          name: IS_FUEL
          description: "If project is from fuel family, then set true (* fuel is not openstack)"
      - string:
          name: PROJECT_VERSION
          default: "master"
          description: "version of project"
      - string:
          name: REMOTE_REPO_HOST
          default: 'perestroika-repo-tst.infra.mirantis.net'  #deps
          description: "Remote host where repo with dependencies are located"
      - string:
          name: BUILD_MARKER
          description: "Mark downstream projects for easy querying of artifacts"

    wrappers:
      - timeout:
          timeout: 300
      - timestamps
      - ansicolor
      - ssh-agent-credentials:
          users:
            - '{ssh-creds-openstack-ci-jenkins}'
            - '{ssh-creds-fuel-osci-bot}'
            - '{ssh-creds-pkgs-ci}'

    scm:
      - perestroika:
          branch: master

    builders:

      - inject:
          properties-content: |
            DEB_DIST_NAME=mos-master
            DEB_PROPOSED_DIST_NAME=mos-master-proposed
            DEB_UPDATES_DIST_NAME=mos-master-updates
            DEB_SECURITY_DIST_NAME=mos-master-security
            DEB_HOLDBACK_DIST_NAME=mos-master-holdback

      - inject:
          properties-content: |
            DEB_REPO_PATH=mos-repos/ubuntu/master
            DEB_PROPOSED_REPO_PATH=
            DEB_UPDATES_REPO_PATH=
            DEB_SECURITY_REPO_PATH=
            DEB_HOLDBACK_REPO_PATH=

      - inject:
          properties-content: |
            IS_UPDATES=false
            PROJECT_NAME=mos
            SRC_PROJECT_PATH=openstack
            SPEC_PROJECT_PATH=openstack-build
            SPEC_PREFIX_PATH=/trusty
            SPEC_PROJECT_SUFFIX=-build
            DIST={main_ubuntu_release}
            PKG_TYPE=deb

      - inject:
          properties-content: |
            PACKAGENAME=${{PACKAGENAME}}
            GERRIT_BRANCH=$PROJECT_VERSION
            GERRIT_REFNAME=$PROJECT_VERSION
            GERRIT_PROJECT=openstack/${{PACKAGENAME}}

      - shell: |
          #!/bin/bash
          set -xe

          echo "Description string: Building ${{PACKAGENAME}}"

          # Check consistency of variables
          # --------------------------------

          if [ "${{IS_OPENSTACK}}" = "true" -a "${{IS_FUEL}}" = "true" ] ; then
              exit 1
          fi

          # Run perestroika
          # --------------------------------

          cp -rv ${{WORKSPACE}}/fuel-mirror/perestroika/* ${{WORKSPACE}}

          if [ "${{IS_FUEL}}" = "true" ] ; then
            bash -x "build-fuel-deb.sh"
          else
            bash -x "build-deb.sh"
          fi

          # Render artifact
          # --------------------------------

          rm -f buildresult.setenvfile | :
          touch buildresult.setenvfile

          for variable in "BUILD_HOST" "PKG_PATH" "EXTRAREPO" ; do
            cat buildresult.params | grep "${{variable}}=" >> buildresult.setenvfile
          done

          cat buildresult.setenvfile

    publishers:
      - archive:
          # BUILD_HOST   -> name of host where build run
          # PKG_PATH     -> path to built package
          # EXTRAREPO    -> list of repos used as dependencies
          artifacts: 'buildresult.setenvfile'
          allow-empty: false
      - description-setter:
          regexp: "Description string: (.*)"
          regexp-for-failed: "Description string: (.*)"
