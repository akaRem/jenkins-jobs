- job-template:
    name: '{mos_version}-pkg-repotest-{os}'
    project-type: freestyle
    concurrent: true
    wrappers:
      - timestamps
      - ansicolor
    triggers:
      - zuul
    scm:
      - fuel-infra:
          username: '{username-openstack-ci-jenkins}'
          credentials-id: '{ssh-creds-openstack-ci-jenkins}'
          repo: '{install-scm-repo}'
          branch: '{install-scm-branch}'
          basedir: ''
    builders:
      - inject-from-job(same-patchset):
          job-name: '{mos_version}-pkg-pipeline-{os}'
          artifact-name: 'buildresult.params'
      - inject-from-job(same-patchset):
          job-name: '{mos_version}-pkg-publish-{os}'
          artifact-name: '{pkg_type}.publish.setenvfile'
      - shell: |
          #!/bin/bash

          set -o xtrace
          set -o errexit
          set -o pipefail

          export REPO_URL=${{DEB_REPO_URL:-${{RPM_REPO_URL}}}}

          # Remove quotes, double and trailing slashes
          REPO_URL=$(echo "${{REPO_URL}}"   | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')
          EXTRAREPO=$(echo "${{EXTRAREPO}}" | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')

          script_log='repo-test-{pkg_type}-docker.log'
          rm -f "${{script_log}}"
          bash -x repo-test-{pkg_type}-docker |& tee "${{script_log}}"

    node: '{install-node}'
    publishers:
      - archive:
          artifacts: repo-test-{pkg_type}-docker.log
          allow-empty: true
