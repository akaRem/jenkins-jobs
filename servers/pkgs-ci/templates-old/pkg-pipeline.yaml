################################################################################
# Job Templates
################################################################################

- job-template:
    name: '{mos_version}-pkg-pipeline-{os}'
    concurrent: True
    description: |
        This job builds a package and then publishes it by triggerring publisher job.<br>
        After publishing are triggered test jobs:
        <ul>
          <li> install test for just built packages
          <li> system test using just built packages
        </ul>
    scm:
      - perestroika:
          branch: '{perestroika-branch}'
    wrappers:
      - ssh-agent-credentials:
          users:
            - '{ssh-creds-openstack-ci-jenkins}'
            - '{ssh-creds-fuel-osci-bot}'
            - '{ssh-creds-pkgs-ci}'
      - timeout:
          timeout: 300
      - timestamps
      - ansicolor
    triggers:
      - zuul
    properties:
      - inject:
          properties-content: |
            SRC_PROJECT_PATH=openstack
            SPEC_PROJECT_PATH=openstack-build
    builders:
      - shell: |
          #!/bin/bash
          set -ex

          # FIXME: use perestroika from openstack/fuel-mirror
          # checkout fuel-mirror to ${{WORKSPACE}}/fuel-mirror
          # and then copy perestroika directory to root ${{WORKSPACE}}
          cp -rv ${{WORKSPACE}}/fuel-mirror/perestroika/* ${{WORKSPACE}}
      - guess-mirror
      - shell:
          !include-raw:
            '../builders/pkg_build.sh.template'
      - trigger-builds:
          - project: '{mos_version}-pkg-publish-{os}'
            current-parameters: true
            property-file: buildresult.params
            block: true
      - copyartifact:
            project: '{mos_version}-pkg-publish-{os}'
            filter: '{pkg_type}.publish.setenvfile'
            parameter-filters: 'ZUUL_UUID=${{ZUUL_UUID}}'
            which-build: 'last-completed'
      - shell: |
            #!/bin/bash
            set -ex
            # Fail stage if packages are not published
            [ -f "{pkg_type}.publish.setenvfile" ] && source {pkg_type}.publish.setenvfile
            VAR="$(echo {pkg_type} | tr [[:lower:]] [[:upper:]])_PUBLISH_SUCCEEDED"
            eval \${{${{VAR}}:-false}} || exit 1

            # Don't post repository link
            test "${{POST_REPO_LINK:-true}}" = "false" && exit || :

            REPOURL=( ${{DEB_REPO_URL:-${{RPM_REPO_URL}}}} )

            # Gerrit parameters
            export GERRIT_HOST=${{GERRIT_HOST:-{gerrit-host}}}
            export GERRIT_PORT=${{GERRIT_PORT:-{gerrit-port}}}
            export GERRIT_USER=${{GERRIT_USER:-{gerrit-user}}}

            GERRIT_MESSAGE="Build succeeded (repository_{pkg_type} pipeline).

            - package.repository.{pkg_type} ${{REPOURL[0]}} : LINK"
            GERRIT_CMD="gerrit review ${{GERRIT_CHANGE_NUMBER}},${{GERRIT_PATCHSET_NUMBER}} '--message=${{GERRIT_MESSAGE}}'"
            ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${{GERRIT_PORT}} ${{GERRIT_USER}}@${{GERRIT_HOST}} "${{GERRIT_CMD}}" || :
    publishers:
      - 'email-alert-on-merge'
      - junit:
          results: 'buildresult.xml'
      - archive:
          artifacts: 'buildresult.params, buildresult.xml, {pkg_type}.publish.setenvfile, tests.envfile, systest.params'
          allow-empty: True
      - post-tasks:
        - matches:
            - log-text: 'Started'
          run-if-job-successful: true
          script: rm -rf *

    node: '{build-node}'

################################################################################
# Job Groups
################################################################################
