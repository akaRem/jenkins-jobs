################################################################################
# Job Templates
################################################################################

- job-template:
    name: '{mos_version}-pkg-gate-{os}'
    concurrent: True
    description: |
        This job parses set of Zuul parameters (ZUUL_CHANGE_IDS and ZUUL_CHANGES) and runs build job
        for each pair.
    wrappers:
      - timestamps
      - ansicolor
      - timeout:
          timeout: 3600
    triggers:
      - zuul
    builders:
      - shell: |
          #!/bin/bash -xe

          ############################
          # Prepare parameters for slave jobs
          ############################

          declare -a CHANGE_IDS
          declare -a CHANGES

          # Array of chande IDs
          CHANGE_IDS=( ${{ZUUL_CHANGE_IDS}} )

          # Array of changes (project:branch:refspec)
          # Save input field separator
          OLDIFS=${{IFS}}

          # Split change info
          IFS="^"
          CHANGES=( ${{ZUUL_CHANGES}} )

          # Restore input field separator
          IFS=${{OLDIFS}}

          # Create parameter files
          for i in ${{!CHANGE_IDS[*]}}; do

          OLDIFS=${{IFS}}
          IFS=":"
          CH=( ${{CHANGES[${{i}}]}} )
          IFS=${{OLDIFS}}

          rm -vf build-param-*.setenvfile

          echo "Preparing parameters for patchset #${{CHANGE_IDS[${{i}}]#*,}} of change ${{CHANGE_IDS[${{i}}]%,*}} in project ${{CH[0]}} (branch ${{CH[1]}})"
          cat > build-param-${{CHANGE_IDS[${{i}}]}}.setenvfile <<EOF
          # Gerrit parameters
          GERRIT_PROJECT=${{CH[0]}}
          GERRIT_BRANCH=${{CH[1]}}
          GERRIT_CHANGE_NUMBER=${{CHANGE_IDS[${{i}}]%,*}}
          GERRIT_PATCHSET_NUMBER=${{CHANGE_IDS[${{i}}]#*,}}
          GERRIT_REFSPEC=${{CH[2]}}

          # Zuul parameters
          ZUUL_PROJECT=${{CH[0]}}
          ZUUL_BRANCH=${{CH[1]}}
          ZUUL_CHANGE=${{CHANGE_IDS[${{i}}]%,*}}
          ZUUL_PATCHSET=${{CHANGE_IDS[${{i}}]#*,}}
          ZUUL_CHANGE_IDS=${{CHANGE_IDS[${{i}}]}}
          ZUUL_CHANGES=${{CHANGES[${{i}}]}}

          # Other job-specific parameters
          LAST_STAGE=false
          TEST_INSTALL=false
          EOF

          done

      - trigger-builds:
          - project: '{mos_version}-pkg-pipeline-{os}'
            current-parameters: true
            block: true
            parameter-factories:
              - factory: filebuild
                file-pattern: 'build-param-*.setenvfile'
                no-files-found-action: FAIL
      - shell: |
            #!/bin/bash -ex

            PUBLISH_HOST={repo-host}

            # New scheme
            DEB_DIST_NAME={project-name}{mos_version}
            DEB_REPO_PATH={rel-path-prefix}/{os}/{mos_version}
            RPM_REPO_PATH={rel-path-prefix}/{os}/{project-name}{mos_version}-{distro}-fuel/os/x86_64/

            ############################
            # Create list of built DEB repositories
            ############################

            for CR in `sed -r 's/,[0-9]+//g' <<< ${{ZUUL_CHANGE_IDS}}`; do
                DEB_REPOS="${{DEB_REPOS:+${{DEB_REPOS}}|}}deb http://${{PUBLISH_HOST}}/{cr-path-prefix}/CR-${{CR}}/${{DEB_REPO_PATH}} ${{DEB_DIST_NAME}} main"
                RPM_REPOS="${{RPM_REPOS:+${{RPM_REPOS}}|}}http://${{PUBLISH_HOST}}/{cr-path-prefix}/CR-${{CR}}/${{RPM_REPO_PATH}}"
            done
            echo "EXTRA_DEB_REPOS=${{DEB_REPOS}}" > deb_repos.setenvfile
            echo "RPM_REPO_URL=${{RPM_REPOS}}"    > rpm_repos.setenvfile

            ############################
            # Create list of built DEB repositories
            ############################

      - conditional-step:
            condition-kind: boolean-expression
            condition-expression: ${{TEST_SYSTEST}}
            on-evaluation-failure: dont-run
            steps:
              - trigger-builds:
                  - project: '{mos_version}-pkg-systest-{os}'
                    current-parameters: true
                    property-file: '{pkg_type}_repos.setenvfile'
                    property-file-fail-on-missing: true
                    block: true
                    predefined-parameters: |
                        ISO_JOB_NAME={mos_version}.test_all

    publishers:
      - archive:
          artifacts: 'build-param-*.setenvfile,*_repos.setenvfile'
          allow-empty: True

    node: '{build-node}'

################################################################################
# Job Groups
################################################################################
