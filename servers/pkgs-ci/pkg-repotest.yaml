- job-template:
    name: '{mos_version}-pkg-repotest-{os}'
    project-type: freestyle
    concurrent: true
    wrappers:
      - timestamps
      - ansicolor
    triggers:
      - zuul
    scm:
      - fuel-infra:
          scm-user: '{scm-user}'
          scm-repo: '{install-scm-repo}'
          scm-basedir: ''
          scm-credentials-id: '{scm-credentials-id}'
          scm-branch: '{install-scm-branch}'
    builders:
      - copyartifact:
          project: '{mos_version}-pkg-pipeline-{os}'
          filter: 'buildresult.params, {pkg_type}.publish.setenvfile'
          which-build: last-successful
          parameter-filters: ZUUL_CHANGE=${{ZUUL_CHANGE}},ZUUL_PATCHSET=${{ZUUL_PATCHSET}}
      - inject:
          properties-file: 'buildresult.params'
      - inject:
          properties-file: '{pkg_type}.publish.setenvfile'
      - shell: |
          #!/bin/bash -xe
          export REPO_URL=${{DEB_REPO_URL:-${{RPM_REPO_URL}}}}

          # Remove quotes, double and trailing slashes
          REPO_URL=$(echo "${{REPO_URL}}"   | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')
          EXTRAREPO=$(echo "${{EXTRAREPO}}" | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')

          bash -x repo-test-{pkg_type}-docker

    node: '{install-node}'
