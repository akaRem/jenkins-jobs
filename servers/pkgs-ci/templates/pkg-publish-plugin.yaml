- job-template:
    name: '{project-version}-pkg-{project-name}-fp-publish-{os}-{distro}'
    project-type: freestyle
    concurrent: false
    quiet-period: 60

    parameters:
      - gerrit
      - zuul

    wrappers:
      - ssh-agent-credentials:
          users:
            - '{ssh-creds-jenkins}'
      - timestamps
      - ansicolor

    triggers:
      - zuul

    scm:
      - perestroika:
          branch: '{perestroika-branch}'

    builders:

      - extended-bash:
          headers: ''
          script: '{pre-build-script}'

      # made as sep. step because prev. injects will take effect only after build step
      - extended-bash:
          headers: ''
          script: |
            inject PROJECT_NAME     "{project-name}"
            inject PROJECT_VERSION  "{project-version}"

            inject IS_UPDATES       "{is-updates}"

            inject IS_DOWNGRADE     "{is-downgrade}"

            inject DIST             "{distro}"
            inject REPO_TYPE        "{pkg_type}"

            inject SIGKEYID         "{pkg-sign-key}"

            inject REMOTE_REPO_HOST         "{publish-repo-host}"
            inject REPO_REQUEST_PATH_PREFIX "review/"
            inject REPO_BASE_PATH           "{repo-base-path}"

            inject DEB_REPO_PATH            "{deb-repo-path}"
            inject DEB_DIST_NAME            "{deb-dist-name}"
            inject DEB_HOTFIX_DIST_NAME     "{deb-dist-name}-hotfix"
            inject DEB_PROPOSED_DIST_NAME   "{deb-dist-name}-proposed"
            inject DEB_UPDATES_DIST_NAME    "{deb-dist-name}-updates"
            inject DEB_SECURITY_DIST_NAME   "{deb-dist-name}-security"
            inject DEB_HOLDBACK_DIST_NAME   "{deb-dist-name}-holdback"

            inject RPM_OS_REPO_PATH         "{rpm-repo-path}/os"
            inject RPM_HOTFIX_REPO_PATH     "{rpm-repo-path}/hotfix"
            inject RPM_UPDATES_REPO_PATH    "{rpm-repo-path}/updates"
            inject RPM_PROPOSED_REPO_PATH   "{rpm-repo-path}/proposed"
            inject RPM_SECURITY_REPO_PATH   "{rpm-repo-path}/security"
            inject RPM_HOLDBACK_REPO_PATH   "{rpm-repo-path}/holdback"

            inject DEB_ORIGIN_RELEASE       "{deb-origin-release}"
            inject DEB_ORIGIN_TEST          "{deb-origin-test}"

            inject PKG_JSON_REPORT          "/home/jenkins/{project-version}-pkg-{project-name}-versions.json"

      - inject-from-job(same-change):  # ref-updated isn't supported yet, will fail on branch creation
          # need BUILD_HOST PKG_PATH
          job-name: '{project-version}-pkg-{project-name}-fp-build-{os}-{distro}'
          artifact-name: 'buildresult.params'

      - shell:
          !include-raw-escape:
            '../builders/pkg_publish.sh'

    publishers:
      - pkg-version-report
      - archive:
           artifacts: '{pkg_type}.publish.setenvfile, tests.envfile'
           allow-empty: true

    node: '{publish-node}'