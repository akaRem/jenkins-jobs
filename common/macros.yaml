#
# In newer versions of Jenkins BUILD_ID is equal to BUILD_NUMBER
# See https://issues.jenkins-ci.org/browse/JENKINS-26520
# Thus we should inject BUILD_TIMESTAMP variable via property
#

- property:
    name: build-timestamp
    properties:
      - inject:
          groovy-content: |
            return [BUILD_TIMESTAMP:currentBuild.getTime().format("yyyy-MM-dd_HH-mm-ss")]

- publisher:
    name: post-destroy-vms
    publishers:
    - post-tasks:
      - matches:
        - log-text: 'Build timed out'
          operator: AND
        script: |
          #!/bin/bash

          set -ex

          source "${WORKSPACE}/${DOS_ENV_NAME_PROPS_FILE:=.dos_environment_name}"
          source "${VENV_PATH}/bin/activate"
          dos.py destroy "${ENV_NAME}"

- builder:
    name: inject-properties-file

    builders:

    - shell: |
        #!/bin/bash
        set -e
        # Here we mimic EnvInject logger to have more natural output
        # We add * inside [] to make mimic logs differ from natural ones
        # We don't add "set -x" because this will break all the idea of natural output
        # We don't check given parameters because JJB will fail on undefined

        echo "[EnvInject*] - Going to inject variables from '{properties-file}'"
        echo "[EnvInject*] - Going to inject as environment variables the content of '{properties-file}'"
        cat {properties-file}

        # it's common that file desn't have newline at the end, so echo w/ newline
        echo

        # EnvInject logs do have empty line at the very end, so we mimic this too
        echo

    - inject:
        properties-file: '{properties-file}'

- builder:
    name: rename

    builders:
    - shell: |
        #!/bin/bash
        set -e
        # Here we mimic common Jenkins logger to have more natural output
        # We add * inside [] to make mimic logs differ from natural ones
        # We don't add "set -x" because this will break all the idea of natural output
        # We don't check given parameters because JJB will fail on undefined

        echo "[Rename*] - Touching '{src}' because empty content is allowed"
        touch {src}

        echo "[Rename*] - Renaming file '{src}' to '{dst}'"
        mv {src} {dst}
        echo "[Rename*] - Renamed successfully."

- builder:
    name: inject-from-job(same-patchset)

    builders:

      # The logic below is done for flexibility.
      # We could trigger job with gerrit parameters and get corresponding
      # artifact or we could trigger this job and pass required fields as
      # parameters, so artifact won't be needed (and won't be found too).

      # 1. remove existing file
      - shell: rm -vf '{artifact-name}'

      # 2. try to copy artifact
      - copyartifact:
          project: '{job-name}'
          filter: '{artifact-name}'
          which-build: last-successful
          parameter-filters: GERRIT_CHANGE_NUMBER=${{GERRIT_CHANGE_NUMBER}},GERRIT_PATCHSET_NUMBER=${{GERRIT_PATCHSET_NUMBER}}
          optional: true

      # 3. touch it, so the file will exist in all cases
      - shell: touch '{artifact-name}'

      # 4. inject file's content: artifact data or nothing
      - inject-properties-file:
          properties-file: '{artifact-name}'

- builder:
    name: inject-devops-env
    builders:
      - copyartifact:
          project: 'devops.{version}.env'
          filter: 'fuel_qa_commit.txt,magnet_link.txt,ubuntu_mirror_id.txt'
          which-build: last-successful
      - inject-properties-file:
          # injects variable FUEL_QA_COMMIT
          properties-file: 'fuel_qa_commit.txt'
      - inject-properties-file:
          # injects variable MAGNET_LINK
          properties-file: 'magnet_link.txt'
      - inject-properties-file:
          # injects variable UBUNTU_MIRROR_ID
          properties-file: 'ubuntu_mirror_id.txt'

########################################################################
# Builder guessing nearest mirror
########################################################################

- builder:
    name: guess-mirror
    builders:
      - shell: !include-raw scripts/guess-mirror.sh
      - inject:
          properties-file: mirror.jenkins-injectfile

########################################################################
# Builder guessing testgroup for system test
########################################################################

- builder:
    name: guess-testgroup
    builders:
      - shell: rm -vf systest_testgroup.envfile
      - shell: !include-raw: scripts/guess-testgroup.sh
      - shell: touch systest_testgroup.envfile
      - inject-properties-file:
          properties-file: systest_testgroup.envfile
      - shell: rm -vf systest_testgroup.envfile

########################################################################
# Builder for system test
########################################################################

- builder:
    name: system-test
    builders:
      - shell: !include-raw: scripts/system_test.sh

########################################################################
# Builder used to download ISO
#
# This builder require additional variables described in script header
#
########################################################################

- builder:
    name: iso-download
    builders:
      - shell: !include-raw scripts/iso_download.sh
      - inject:
          properties-file: iso.setenvfile

########################################################################
# Builders for publishing ISO
########################################################################
- builder:
    name: publish-community-iso
    builders:
      - inject:
          properties-content: |
            FRONT_URL=http://seed.fuel-infra.org/fuelweb-iso
            HTTP_ROOT=http://seed-cz1.fuel-infra.org/fuelweb-iso,http://seed-us1.fuel-infra.org/fuelweb-iso
            TRACKER_URL=http://retracker.local:80/announce,http://seed-us1.fuel-infra.org:8080/announce,http://seed-cz1.fuel-infra.org:8080/announce
            SEED_HOST=seed-us1.fuel-infra.org:17333,seed-cz1.fuel-infra.org:17333
      - shell:
          !include-raw scripts/publish_artifacts.sh

- builder:
    name: publish-product-iso
    builders:
      - inject:
          properties-content: |
            HTTP_ROOT=http://@HOSTNAME@/fuelweb-iso
            TRACKER_URL=http://tracker01-bud.infra.mirantis.net:8080/announce,http://tracker01-scc.infra.mirantis.net:8080/announce,http://tracker01-msk.infra.mirantis.net:8080/announce
      - shell:
          !include-raw scripts/publish_artifacts.sh

########################################################################
# Publisher creating report about published package versions
########################################################################

- publisher:
    name: pkg-version-report
    publishers:
      - post-tasks:
        - matches:
            - log-text: 'Started'
          run-if-job-successful: true
          script: !include-raw scripts/pkg-report.py
      - post-tasks:
        - matches:
            - log-text: 'Started'
          run-if-job-successful: true
          script: |
              #!/bin/bash
              set -ex
              if [ -n "${PKG_JSON_REPORT}" -a "${PKG_JSON_REPORT}" != "pkg-versions.json" ]; then
                  cp -f ${PKG_JSON_REPORT} pkg-versions.json
              fi

########################################################################
# Gerrit parameters
########################################################################

- parameter:
    name: gerrit
    parameters:
      - string:
          name: GERRIT_PROJECT
          description: 'The name of the project.'
      - choice:
          name: GERRIT_EVENT_TYPE
          description: 'The type of this event.'
          choices:
            - 'patchset-created'
            - 'change-abandoned'
            - 'change-merged'
            - 'change-restored'
            - 'comment-added'
            - 'draft-published'
            - 'dropped-output'
            - 'hashtags-changed'
            - 'project-created'
            - 'merge-failed'
            - 'ref-updated'
            - 'reviewer-added'
            - 'topic-changed'
      - string:
          name: GERRIT_EVENT_HASH
          description: 'A unique hash making all triggered builds unique in the queue.'
      - string:
          name: GERRIT_EVENT_ACCOUNT
          description: 'The name and email of the account associated with the event, if any. "Name" <name@somewhere.com>'
      - string:
          name: GERRIT_EVENT_ACCOUNT_NAME
          description: 'The name of the account associated with the event, if any.'
      - string:
          name: GERRIT_EVENT_ACCOUNT_EMAIL
          description: 'The email of the account associated with the event, if any.'
      - string:
          name: GERRIT_HOST
          description: 'The hostname of the Gerrit instance that provided the event.'
      - string:
          name: GERRIT_PORT
          description: 'The port number of the Gerrit instance that provided the event.'
          default: '29418'
      - choice:
          name: GERRIT_SCHEME
          description: 'The protocol name of the Gerrit instance that provided the event.'
          choices:
            - 'ssh'
            - 'http'
            - 'https'
            - 'git'
      - choice:
          name: GERRIT_CHANGE_STATUS
          description: 'Status of change'
          choices:
            - 'NEW'
            - 'MERGED'
      - string:
          name: GERRIT_CHANGE_ID
          description: 'The Change-Id.'
      - string:
          name: GERRIT_CHANGE_SUBJECT
          description: 'The first line of the commit message.'
      - text:
          name: GERRIT_CHANGE_COMMIT_MESSAGE
          description: 'The full commit message, UTF-8 Base64 encoded.'
      - string:
          name: GERRIT_CHANGE_NUMBER
          description: 'The change number.'
      - string:
          name: GERRIT_CHANGE_URL
          description: 'The URL to the change.'
      - string:
          name: GERRIT_PATCHSET_NUMBER
          description: 'The Patch Set number.'
      - string:
          name: GERRIT_PATCHSET_REVISION
          description: 'The Patch Set revision id.'
      - string:
          name: GERRIT_BRANCH
          description: 'The name of the branch.'
          default: 'master'
      - string:
          name: GERRIT_TOPIC
          description: 'The name of the topic.'
      - string:
          name: GERRIT_REFSPEC
          description: 'The ref-spec. (refs/changes/xx/xxxx/z).'
      - string:
          name: GERRIT_CHANGE_OWNER
          description: 'The name and email of the owner of the change "Name" <name@somewhere.com>'
      - string:
          name: GERRIT_CHANGE_OWNER_NAME
          description: 'The name of the owner of the change.'
      - string:
          name: GERRIT_CHANGE_OWNER_EMAIL
          description: 'The email of the owner of the change.'
      - string:
          name: GERRIT_PATCHSET_UPLOADER
          description: 'The name and email of the uploader of the Patch Set "Name" <name@somewhere.com>'
      - string:
          name: GERRIT_PATCHSET_UPLOADER_NAME
          description: 'The name of the uploader of the Patch Set.'
      - string:
          name: GERRIT_PATCHSET_UPLOADER_EMAIL
          description: 'The email of the uploader of the Patch Set.'
      - string:
          name: GERRIT_PATCHSET_ABANDONER
          description: 'The name and email of the abandoner of the Patch Set "Name" <name@somewhere.com>'
      - string:
          name: GERRIT_PATCHSET_ABANDONER_NAME
          description: 'The name of the abandoner of the Patch Set.'
      - string:
          name: GERRIT_PATCHSET_ABANDONER_EMAIL
          description: 'The email of the abandoner of the Patch Set.'
      - string:
          name: GERRIT_PATCHSET_RESTORER
          description: 'The name and email of the restorer of the Patch Set "Name" <name@somewhere.com>'
      - string:
          name: GERRIT_PATCHSET_RESTORER_NAME
          description: 'The name of the restorer of the Patch Set.'
      - string:
          name: GERRIT_PATCHSET_RESTORER_EMAIL
          description: 'The email of the restorer of the Patch Set.'
      - string:
          name: GERRIT_REFNAME
          description: 'Ref name within project.'
      - string:
          name: GERRIT_OLDREV
          description: 'The old value of the ref, prior to the update.'
      - string:
          name: GERRIT_NEWREV
          description: 'The new value the ref was updated to.'
